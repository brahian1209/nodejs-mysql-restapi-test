{"version":3,"sources":["Login.controller.js"],"names":["getUsuarios","req","res","pool","request","query","querys","getAllUsuarios","result","json","recordset","status","send","message","crearUsuario","body","NombreCompleto","CorreoElectronico","Usuario","Contrasena","input","sql","VarChar","CreateNewUsser","console","log","getUsserBYID","id","params","getUsserById","deleteUsserById","deleteUsser","sendStatus","GetCountUsserActive","ActualizarPorId","Int"],"mappings":"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","sourcesContent":["import {getConnection,sql, querys} from '../database/index.js';\r\n\r\nexport const getUsuarios = async (req, res) => {\r\n    try{\r\n    const pool = await getConnection();\r\n    const result = await pool.request().query(querys.getAllUsuarios);\r\n    res.json(result.recordset);\r\n    }catch (error){\r\n        res.status(500)\r\n        res.send(error.message);\r\n    }\r\n};\r\n\r\nexport const crearUsuario =  async (req, res) => {\r\n    const {NombreCompleto, CorreoElectronico, Usuario, Contrasena} = req.body;\r\n    if(NombreCompleto == null || CorreoElectronico == null || Usuario == null || Contrasena == null){\r\n        return res.status(400).json({message: 'Debe diligenciar todos los campos'});\r\n    }\r\n    try {\r\n        const pool = await getConnection();\r\n        await pool\r\n        .request()\r\n        .input('NombreCompleto',sql.VarChar, NombreCompleto)\r\n        .input('CorreoElectronico',sql.VarChar, CorreoElectronico)\r\n        .input('Usuario',sql.VarChar, Usuario)\r\n        .input('Contrasena',sql.VarChar, Contrasena)\r\n        .query(querys.CreateNewUsser)\r\n    \r\n        console.log(result)\r\n    \r\n        res.json({NombreCompleto,CorreoElectronico,Usuario});\r\n    } catch (error){\r\n        res.status(500)\r\n        res.send(error.message);\r\n    }\r\n\r\n}\r\n\r\nexport const getUsserBYID = async (req,res) => {\r\n    const {id} = req.params;\r\n    const pool = await getConnection();\r\n    const result = await pool\r\n    .request()\r\n    .input('Id', id)\r\n    .query(querys.getUsserById);\r\n    console.log(result);\r\n\r\n\r\n    res.send(result.recordset[0]);\r\n\r\n\r\n\r\n};\r\n\r\n\r\nexport const deleteUsserById = async (req,res) => {\r\n    const {id} = req.params;\r\n    const pool = await getConnection();\r\n    const result = await pool\r\n    .request()\r\n    .input('Id', id)\r\n    .query(querys.deleteUsser);\r\n    console.log(result);\r\n\r\n\r\n    res.sendStatus(204);\r\n\r\n\r\n    \r\n};\r\n\r\nexport const GetCountUsserActive = async (req,res) => {\r\n    const pool = await getConnection();\r\n    const result = await pool\r\n    .request()\r\n    .query(querys.GetCountUsserActive);\r\n    //console.log(result);\r\n    res.json(result.recordset[0]['']);   \r\n}\r\n\r\nexport const ActualizarPorId = async (req,res) => {\r\n    const {NombreCompleto, CorreoElectronico, Usuario, Contrasena} = req.body;\r\n\r\n    const {id} = req.params;\r\n    \r\n    if(NombreCompleto == null || CorreoElectronico == null || Usuario == null || Contrasena == null){\r\n        return res.status(400).json({message: 'Debe diligenciar todos los campos'});\r\n    }\r\n\r\n    const pool = await getConnection();\r\n    await pool\r\n    .request()\r\n    .input('NombreCompleto', sql.VarChar, NombreCompleto)\r\n    .input('CorreoElectronico', sql.VarChar, CorreoElectronico)\r\n    .input('Usuario', sql.VarChar, Usuario)\r\n    .input('Contrasena', sql.VarChar, Contrasena)\r\n    .input('Id', sql.Int, id)\r\n    \r\n    .query(querys.ActualizarPorId);\r\n\r\n    res.json({NombreCompleto, CorreoElectronico, Usuario, Contrasena})\r\n\r\n}"],"file":"Login.controller.dev.js"}